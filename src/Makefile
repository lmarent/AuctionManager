# Makefile.in generated by automake 1.14.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/auctionmanager
pkgincludedir = $(includedir)/auctionmanager
pkglibdir = $(libdir)/auctionmanager
pkglibexecdir = $(libexecdir)/auctionmanager
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = auctionManager$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_auctionManager_OBJECTS = auctionManager-Error.$(OBJEXT) \
	auctionManager-Event.$(OBJEXT) \
	auctionManager-EventScheduler.$(OBJEXT) \
	auctionManager-Logger.$(OBJEXT) \
	auctionManager-Timeval.$(OBJEXT) \
	auctionManager-FieldDefParser.$(OBJEXT) \
	auctionManager-FieldValParser.$(OBJEXT) \
	auctionManager-FieldValue.$(OBJEXT) \
	auctionManager-MAPIBidParser.$(OBJEXT) \
	auctionManager-Module.$(OBJEXT) \
	auctionManager-ModuleLoader.$(OBJEXT) \
	auctionManager-PageRepository.$(OBJEXT) \
	auctionManager-ParserFcts.$(OBJEXT) \
	auctionManager-ProcModule.$(OBJEXT) \
	auctionManager-Constants.$(OBJEXT) \
	auctionManager-ConstantsAum.$(OBJEXT) \
	auctionManager-ConfigParser.$(OBJEXT) \
	auctionManager-ConfigManager.$(OBJEXT) \
	auctionManager-CommandLineArgs.$(OBJEXT) \
	auctionManager-CtrlComm.$(OBJEXT) \
	auctionManager-XMLParser.$(OBJEXT) \
	auctionManager-Bid.$(OBJEXT) \
	auctionManager-AuctionIdSource.$(OBJEXT) \
	auctionManager-Auction.$(OBJEXT) \
	auctionManager-AuctionManager.$(OBJEXT) \
	auctionManager-AuctionFileParser.$(OBJEXT) \
	auctionManager-MAPIAuctionParser.$(OBJEXT) \
	auctionManager-BidIdSource.$(OBJEXT) \
	auctionManager-BidManager.$(OBJEXT) \
	auctionManager-BidFileParser.$(OBJEXT) \
	auctionManager-AUMProcessor.$(OBJEXT) \
	auctionManager-AuctionManagerInfo.$(OBJEXT) \
	auctionManager-AuctionTimer.$(OBJEXT) \
	auctionManager-AuctionManagerComponent.$(OBJEXT) \
	auctionManager-Auctioner.$(OBJEXT) \
	auctionManager-main.$(OBJEXT)
auctionManager_OBJECTS = $(am_auctionManager_OBJECTS)
auctionManager_DEPENDENCIES =  \
	$(top_builddir)/lib/getopt_long/libgetopt_long.a \
	$(top_builddir)/lib/httpd/libhttpd.a
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(auctionManager_SOURCES)
DIST_SOURCES = $(auctionManager_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/luis/AuctionManager/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/luis/AuctionManager/missing autoconf
AUTOHEADER = ${SHELL} /home/luis/AuctionManager/missing autoheader
AUTOMAKE = ${SHELL} /home/luis/AuctionManager/missing automake-1.14
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -Wall -I/usr/include/libxml2
CPP = gcc -E
CPPFLAGS =  -I/usr/include/libxml2
CURL_CFLAGS =  
CURL_LIBS = -lcurl  
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -Wall -Wno-deprecated  -I/usr/include/libxml2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEF_BINDIR = /usr/local/bin
DEF_LIBDIR = /usr/local/lib/auctionmanager
DEF_STATEDIR = /usr/local/var
DEF_SYSCONFDIR = /home/luis/AuctionManager/etc
DEPDIR = .deps
DLLIB = 
DLLTOOL = false
DOXY = doxygen
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
ENABLE_DEBUG = 
ENABLE_NF = 
ENABLE_TEST = 
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
HISTORYLIB = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
IPTABLES_VERSION = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS =  -L/lib -L/usr/local/lib -L/usr/lib  -ltermcap -lxml2
LIBOBJS = 
LIBS = -ldl 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAKEINFO = ${SHELL} /home/luis/AuctionManager/missing makeinfo
MANIFEST_TOOL = :
MATHLIB = 
MKDIR_P = /bin/mkdir -p
MPATROLLIB = 
NL3_CFLAGS = -I/usr/local/include/libnl3  
NL3_LIBS = -L/usr/local/lib -lnl-3  
NL_ROUTE_3_CFLAGS = -I/usr/local/include/libnl3  
NL_ROUTE_3_LIBS = -L/usr/local/lib -lnl-route-3 -lnl-3  
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OS = UNIX
OTOOL = 
OTOOL64 = 
PACKAGE = auctionmanager
PACKAGE_BUGREPORT = la.marentes455@uniandes.edu.co
PACKAGE_NAME = auctionManager
PACKAGE_STRING = auctionManager 0.1
PACKAGE_TARNAME = auctionmanager
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PTHREADLIB = 
RANLIB = ranlib
READLINELIB =  -lreadline
REL_DATE = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SSLLIB = 
SSL_PASSWD = 
STRIP = strip
ULOGLIB = 
USE_SSL = 
VERSION = 0.1
XMLLIB = -lxml2
XML_CONFIG = /usr/bin/xml2-config
XSLTLIB = -lxslt
abs_builddir = /home/luis/AuctionManager/src
abs_srcdir = /home/luis/AuctionManager/src
abs_top_builddir = /home/luis/AuctionManager
abs_top_srcdir = /home/luis/AuctionManager
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr/local
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/luis/AuctionManager/install-sh
libdir = ${exec_prefix}/lib/auctionmanager
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
poco_CFLAGS = 
poco_LDFLAGS = 
poco_LIBS = 
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = /home/luis/AuctionManager/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AUTOMAKE_OPTIONS = foreign
#AM_CXXFLAGS = -O2  
AM_CXXFLAGS = -I$(top_srcdir)/lib/getopt_long -I$(top_srcdir)/lib/httpd \
				-g -fno-inline -D_GLIBCXX_DEBUG -DDEBUG -DPROFILING

auctionManager_SOURCES = Error.cpp \
						  Event.cpp \
						  EventScheduler.cpp \
						  Logger.cpp \
						  Timeval.cpp \
						  FieldDefParser.cpp \
						  FieldValParser.cpp \
						  FieldValue.cpp \
						  MAPIBidParser.cpp \
						  Module.cpp \
						  ModuleLoader.cpp \
						  PageRepository.cpp \
						  ParserFcts.cpp \
						  ProcModule.cpp \
						  Constants.cpp \
						  ConstantsAum.cpp \
						  ConfigParser.cpp \
						  ConfigManager.cpp \
						  CommandLineArgs.cpp \
						  CtrlComm.cpp \
						  XMLParser.cpp \
						  Bid.cpp \
						  AuctionIdSource.cpp \
						  Auction.cpp \
						  AuctionManager.cpp \
						  AuctionFileParser.cpp \
						  MAPIAuctionParser.cpp \
						  BidIdSource.cpp \
						  BidManager.cpp \
						  BidFileParser.cpp \
						  AUMProcessor.cpp \
						  AuctionManagerInfo.cpp \
						  AuctionTimer.cpp \
						  AuctionManagerComponent.cpp \
						  Auctioner.cpp \
						  main.cpp

auctionManager_CPPFLAGS = -I$(top_srcdir)/include -I$(top_srcdir)/lib/getopt_long \
						  -I$(top_srcdir)/lib/httpd

auctionManager_LDADD = $(top_builddir)/lib/getopt_long/libgetopt_long.a \
					   $(top_builddir)/lib/httpd/libhttpd.a \
					      -lxml2


# what flags you want to pass to the C compiler & linker
AM_CPPFLAGS = -g -I../include  -I/usr/local/include/libnl3   -I/usr/local/include/libnl3  
AM_LDFLAGS = $(CPPUNIT_LIBS) -ldl -lcppunit $(top_builddir)/lib/getopt_long/libgetopt_long.a \
			 $(top_builddir)/lib/httpd/libhttpd.a \
			    -lxml2

LDADD =  
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

auctionManager$(EXEEXT): $(auctionManager_OBJECTS) $(auctionManager_DEPENDENCIES) $(EXTRA_auctionManager_DEPENDENCIES) 
	@rm -f auctionManager$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(auctionManager_OBJECTS) $(auctionManager_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/auctionManager-AUMProcessor.Po
include ./$(DEPDIR)/auctionManager-Auction.Po
include ./$(DEPDIR)/auctionManager-AuctionFileParser.Po
include ./$(DEPDIR)/auctionManager-AuctionIdSource.Po
include ./$(DEPDIR)/auctionManager-AuctionManager.Po
include ./$(DEPDIR)/auctionManager-AuctionManagerComponent.Po
include ./$(DEPDIR)/auctionManager-AuctionManagerInfo.Po
include ./$(DEPDIR)/auctionManager-AuctionTimer.Po
include ./$(DEPDIR)/auctionManager-Auctioner.Po
include ./$(DEPDIR)/auctionManager-Bid.Po
include ./$(DEPDIR)/auctionManager-BidFileParser.Po
include ./$(DEPDIR)/auctionManager-BidIdSource.Po
include ./$(DEPDIR)/auctionManager-BidManager.Po
include ./$(DEPDIR)/auctionManager-CommandLineArgs.Po
include ./$(DEPDIR)/auctionManager-ConfigManager.Po
include ./$(DEPDIR)/auctionManager-ConfigParser.Po
include ./$(DEPDIR)/auctionManager-Constants.Po
include ./$(DEPDIR)/auctionManager-ConstantsAum.Po
include ./$(DEPDIR)/auctionManager-CtrlComm.Po
include ./$(DEPDIR)/auctionManager-Error.Po
include ./$(DEPDIR)/auctionManager-Event.Po
include ./$(DEPDIR)/auctionManager-EventScheduler.Po
include ./$(DEPDIR)/auctionManager-FieldDefParser.Po
include ./$(DEPDIR)/auctionManager-FieldValParser.Po
include ./$(DEPDIR)/auctionManager-FieldValue.Po
include ./$(DEPDIR)/auctionManager-Logger.Po
include ./$(DEPDIR)/auctionManager-MAPIAuctionParser.Po
include ./$(DEPDIR)/auctionManager-MAPIBidParser.Po
include ./$(DEPDIR)/auctionManager-Module.Po
include ./$(DEPDIR)/auctionManager-ModuleLoader.Po
include ./$(DEPDIR)/auctionManager-PageRepository.Po
include ./$(DEPDIR)/auctionManager-ParserFcts.Po
include ./$(DEPDIR)/auctionManager-ProcModule.Po
include ./$(DEPDIR)/auctionManager-Timeval.Po
include ./$(DEPDIR)/auctionManager-XMLParser.Po
include ./$(DEPDIR)/auctionManager-main.Po

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

auctionManager-Error.o: Error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Error.o -MD -MP -MF $(DEPDIR)/auctionManager-Error.Tpo -c -o auctionManager-Error.o `test -f 'Error.cpp' || echo '$(srcdir)/'`Error.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Error.Tpo $(DEPDIR)/auctionManager-Error.Po
#	$(AM_V_CXX)source='Error.cpp' object='auctionManager-Error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Error.o `test -f 'Error.cpp' || echo '$(srcdir)/'`Error.cpp

auctionManager-Error.obj: Error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Error.obj -MD -MP -MF $(DEPDIR)/auctionManager-Error.Tpo -c -o auctionManager-Error.obj `if test -f 'Error.cpp'; then $(CYGPATH_W) 'Error.cpp'; else $(CYGPATH_W) '$(srcdir)/Error.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Error.Tpo $(DEPDIR)/auctionManager-Error.Po
#	$(AM_V_CXX)source='Error.cpp' object='auctionManager-Error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Error.obj `if test -f 'Error.cpp'; then $(CYGPATH_W) 'Error.cpp'; else $(CYGPATH_W) '$(srcdir)/Error.cpp'; fi`

auctionManager-Event.o: Event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Event.o -MD -MP -MF $(DEPDIR)/auctionManager-Event.Tpo -c -o auctionManager-Event.o `test -f 'Event.cpp' || echo '$(srcdir)/'`Event.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Event.Tpo $(DEPDIR)/auctionManager-Event.Po
#	$(AM_V_CXX)source='Event.cpp' object='auctionManager-Event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Event.o `test -f 'Event.cpp' || echo '$(srcdir)/'`Event.cpp

auctionManager-Event.obj: Event.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Event.obj -MD -MP -MF $(DEPDIR)/auctionManager-Event.Tpo -c -o auctionManager-Event.obj `if test -f 'Event.cpp'; then $(CYGPATH_W) 'Event.cpp'; else $(CYGPATH_W) '$(srcdir)/Event.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Event.Tpo $(DEPDIR)/auctionManager-Event.Po
#	$(AM_V_CXX)source='Event.cpp' object='auctionManager-Event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Event.obj `if test -f 'Event.cpp'; then $(CYGPATH_W) 'Event.cpp'; else $(CYGPATH_W) '$(srcdir)/Event.cpp'; fi`

auctionManager-EventScheduler.o: EventScheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-EventScheduler.o -MD -MP -MF $(DEPDIR)/auctionManager-EventScheduler.Tpo -c -o auctionManager-EventScheduler.o `test -f 'EventScheduler.cpp' || echo '$(srcdir)/'`EventScheduler.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-EventScheduler.Tpo $(DEPDIR)/auctionManager-EventScheduler.Po
#	$(AM_V_CXX)source='EventScheduler.cpp' object='auctionManager-EventScheduler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-EventScheduler.o `test -f 'EventScheduler.cpp' || echo '$(srcdir)/'`EventScheduler.cpp

auctionManager-EventScheduler.obj: EventScheduler.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-EventScheduler.obj -MD -MP -MF $(DEPDIR)/auctionManager-EventScheduler.Tpo -c -o auctionManager-EventScheduler.obj `if test -f 'EventScheduler.cpp'; then $(CYGPATH_W) 'EventScheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/EventScheduler.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-EventScheduler.Tpo $(DEPDIR)/auctionManager-EventScheduler.Po
#	$(AM_V_CXX)source='EventScheduler.cpp' object='auctionManager-EventScheduler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-EventScheduler.obj `if test -f 'EventScheduler.cpp'; then $(CYGPATH_W) 'EventScheduler.cpp'; else $(CYGPATH_W) '$(srcdir)/EventScheduler.cpp'; fi`

auctionManager-Logger.o: Logger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Logger.o -MD -MP -MF $(DEPDIR)/auctionManager-Logger.Tpo -c -o auctionManager-Logger.o `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Logger.Tpo $(DEPDIR)/auctionManager-Logger.Po
#	$(AM_V_CXX)source='Logger.cpp' object='auctionManager-Logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Logger.o `test -f 'Logger.cpp' || echo '$(srcdir)/'`Logger.cpp

auctionManager-Logger.obj: Logger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Logger.obj -MD -MP -MF $(DEPDIR)/auctionManager-Logger.Tpo -c -o auctionManager-Logger.obj `if test -f 'Logger.cpp'; then $(CYGPATH_W) 'Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Logger.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Logger.Tpo $(DEPDIR)/auctionManager-Logger.Po
#	$(AM_V_CXX)source='Logger.cpp' object='auctionManager-Logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Logger.obj `if test -f 'Logger.cpp'; then $(CYGPATH_W) 'Logger.cpp'; else $(CYGPATH_W) '$(srcdir)/Logger.cpp'; fi`

auctionManager-Timeval.o: Timeval.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Timeval.o -MD -MP -MF $(DEPDIR)/auctionManager-Timeval.Tpo -c -o auctionManager-Timeval.o `test -f 'Timeval.cpp' || echo '$(srcdir)/'`Timeval.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Timeval.Tpo $(DEPDIR)/auctionManager-Timeval.Po
#	$(AM_V_CXX)source='Timeval.cpp' object='auctionManager-Timeval.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Timeval.o `test -f 'Timeval.cpp' || echo '$(srcdir)/'`Timeval.cpp

auctionManager-Timeval.obj: Timeval.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Timeval.obj -MD -MP -MF $(DEPDIR)/auctionManager-Timeval.Tpo -c -o auctionManager-Timeval.obj `if test -f 'Timeval.cpp'; then $(CYGPATH_W) 'Timeval.cpp'; else $(CYGPATH_W) '$(srcdir)/Timeval.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Timeval.Tpo $(DEPDIR)/auctionManager-Timeval.Po
#	$(AM_V_CXX)source='Timeval.cpp' object='auctionManager-Timeval.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Timeval.obj `if test -f 'Timeval.cpp'; then $(CYGPATH_W) 'Timeval.cpp'; else $(CYGPATH_W) '$(srcdir)/Timeval.cpp'; fi`

auctionManager-FieldDefParser.o: FieldDefParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-FieldDefParser.o -MD -MP -MF $(DEPDIR)/auctionManager-FieldDefParser.Tpo -c -o auctionManager-FieldDefParser.o `test -f 'FieldDefParser.cpp' || echo '$(srcdir)/'`FieldDefParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-FieldDefParser.Tpo $(DEPDIR)/auctionManager-FieldDefParser.Po
#	$(AM_V_CXX)source='FieldDefParser.cpp' object='auctionManager-FieldDefParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-FieldDefParser.o `test -f 'FieldDefParser.cpp' || echo '$(srcdir)/'`FieldDefParser.cpp

auctionManager-FieldDefParser.obj: FieldDefParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-FieldDefParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-FieldDefParser.Tpo -c -o auctionManager-FieldDefParser.obj `if test -f 'FieldDefParser.cpp'; then $(CYGPATH_W) 'FieldDefParser.cpp'; else $(CYGPATH_W) '$(srcdir)/FieldDefParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-FieldDefParser.Tpo $(DEPDIR)/auctionManager-FieldDefParser.Po
#	$(AM_V_CXX)source='FieldDefParser.cpp' object='auctionManager-FieldDefParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-FieldDefParser.obj `if test -f 'FieldDefParser.cpp'; then $(CYGPATH_W) 'FieldDefParser.cpp'; else $(CYGPATH_W) '$(srcdir)/FieldDefParser.cpp'; fi`

auctionManager-FieldValParser.o: FieldValParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-FieldValParser.o -MD -MP -MF $(DEPDIR)/auctionManager-FieldValParser.Tpo -c -o auctionManager-FieldValParser.o `test -f 'FieldValParser.cpp' || echo '$(srcdir)/'`FieldValParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-FieldValParser.Tpo $(DEPDIR)/auctionManager-FieldValParser.Po
#	$(AM_V_CXX)source='FieldValParser.cpp' object='auctionManager-FieldValParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-FieldValParser.o `test -f 'FieldValParser.cpp' || echo '$(srcdir)/'`FieldValParser.cpp

auctionManager-FieldValParser.obj: FieldValParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-FieldValParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-FieldValParser.Tpo -c -o auctionManager-FieldValParser.obj `if test -f 'FieldValParser.cpp'; then $(CYGPATH_W) 'FieldValParser.cpp'; else $(CYGPATH_W) '$(srcdir)/FieldValParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-FieldValParser.Tpo $(DEPDIR)/auctionManager-FieldValParser.Po
#	$(AM_V_CXX)source='FieldValParser.cpp' object='auctionManager-FieldValParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-FieldValParser.obj `if test -f 'FieldValParser.cpp'; then $(CYGPATH_W) 'FieldValParser.cpp'; else $(CYGPATH_W) '$(srcdir)/FieldValParser.cpp'; fi`

auctionManager-FieldValue.o: FieldValue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-FieldValue.o -MD -MP -MF $(DEPDIR)/auctionManager-FieldValue.Tpo -c -o auctionManager-FieldValue.o `test -f 'FieldValue.cpp' || echo '$(srcdir)/'`FieldValue.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-FieldValue.Tpo $(DEPDIR)/auctionManager-FieldValue.Po
#	$(AM_V_CXX)source='FieldValue.cpp' object='auctionManager-FieldValue.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-FieldValue.o `test -f 'FieldValue.cpp' || echo '$(srcdir)/'`FieldValue.cpp

auctionManager-FieldValue.obj: FieldValue.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-FieldValue.obj -MD -MP -MF $(DEPDIR)/auctionManager-FieldValue.Tpo -c -o auctionManager-FieldValue.obj `if test -f 'FieldValue.cpp'; then $(CYGPATH_W) 'FieldValue.cpp'; else $(CYGPATH_W) '$(srcdir)/FieldValue.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-FieldValue.Tpo $(DEPDIR)/auctionManager-FieldValue.Po
#	$(AM_V_CXX)source='FieldValue.cpp' object='auctionManager-FieldValue.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-FieldValue.obj `if test -f 'FieldValue.cpp'; then $(CYGPATH_W) 'FieldValue.cpp'; else $(CYGPATH_W) '$(srcdir)/FieldValue.cpp'; fi`

auctionManager-MAPIBidParser.o: MAPIBidParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-MAPIBidParser.o -MD -MP -MF $(DEPDIR)/auctionManager-MAPIBidParser.Tpo -c -o auctionManager-MAPIBidParser.o `test -f 'MAPIBidParser.cpp' || echo '$(srcdir)/'`MAPIBidParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-MAPIBidParser.Tpo $(DEPDIR)/auctionManager-MAPIBidParser.Po
#	$(AM_V_CXX)source='MAPIBidParser.cpp' object='auctionManager-MAPIBidParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-MAPIBidParser.o `test -f 'MAPIBidParser.cpp' || echo '$(srcdir)/'`MAPIBidParser.cpp

auctionManager-MAPIBidParser.obj: MAPIBidParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-MAPIBidParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-MAPIBidParser.Tpo -c -o auctionManager-MAPIBidParser.obj `if test -f 'MAPIBidParser.cpp'; then $(CYGPATH_W) 'MAPIBidParser.cpp'; else $(CYGPATH_W) '$(srcdir)/MAPIBidParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-MAPIBidParser.Tpo $(DEPDIR)/auctionManager-MAPIBidParser.Po
#	$(AM_V_CXX)source='MAPIBidParser.cpp' object='auctionManager-MAPIBidParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-MAPIBidParser.obj `if test -f 'MAPIBidParser.cpp'; then $(CYGPATH_W) 'MAPIBidParser.cpp'; else $(CYGPATH_W) '$(srcdir)/MAPIBidParser.cpp'; fi`

auctionManager-Module.o: Module.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Module.o -MD -MP -MF $(DEPDIR)/auctionManager-Module.Tpo -c -o auctionManager-Module.o `test -f 'Module.cpp' || echo '$(srcdir)/'`Module.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Module.Tpo $(DEPDIR)/auctionManager-Module.Po
#	$(AM_V_CXX)source='Module.cpp' object='auctionManager-Module.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Module.o `test -f 'Module.cpp' || echo '$(srcdir)/'`Module.cpp

auctionManager-Module.obj: Module.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Module.obj -MD -MP -MF $(DEPDIR)/auctionManager-Module.Tpo -c -o auctionManager-Module.obj `if test -f 'Module.cpp'; then $(CYGPATH_W) 'Module.cpp'; else $(CYGPATH_W) '$(srcdir)/Module.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Module.Tpo $(DEPDIR)/auctionManager-Module.Po
#	$(AM_V_CXX)source='Module.cpp' object='auctionManager-Module.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Module.obj `if test -f 'Module.cpp'; then $(CYGPATH_W) 'Module.cpp'; else $(CYGPATH_W) '$(srcdir)/Module.cpp'; fi`

auctionManager-ModuleLoader.o: ModuleLoader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ModuleLoader.o -MD -MP -MF $(DEPDIR)/auctionManager-ModuleLoader.Tpo -c -o auctionManager-ModuleLoader.o `test -f 'ModuleLoader.cpp' || echo '$(srcdir)/'`ModuleLoader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ModuleLoader.Tpo $(DEPDIR)/auctionManager-ModuleLoader.Po
#	$(AM_V_CXX)source='ModuleLoader.cpp' object='auctionManager-ModuleLoader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ModuleLoader.o `test -f 'ModuleLoader.cpp' || echo '$(srcdir)/'`ModuleLoader.cpp

auctionManager-ModuleLoader.obj: ModuleLoader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ModuleLoader.obj -MD -MP -MF $(DEPDIR)/auctionManager-ModuleLoader.Tpo -c -o auctionManager-ModuleLoader.obj `if test -f 'ModuleLoader.cpp'; then $(CYGPATH_W) 'ModuleLoader.cpp'; else $(CYGPATH_W) '$(srcdir)/ModuleLoader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ModuleLoader.Tpo $(DEPDIR)/auctionManager-ModuleLoader.Po
#	$(AM_V_CXX)source='ModuleLoader.cpp' object='auctionManager-ModuleLoader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ModuleLoader.obj `if test -f 'ModuleLoader.cpp'; then $(CYGPATH_W) 'ModuleLoader.cpp'; else $(CYGPATH_W) '$(srcdir)/ModuleLoader.cpp'; fi`

auctionManager-PageRepository.o: PageRepository.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-PageRepository.o -MD -MP -MF $(DEPDIR)/auctionManager-PageRepository.Tpo -c -o auctionManager-PageRepository.o `test -f 'PageRepository.cpp' || echo '$(srcdir)/'`PageRepository.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-PageRepository.Tpo $(DEPDIR)/auctionManager-PageRepository.Po
#	$(AM_V_CXX)source='PageRepository.cpp' object='auctionManager-PageRepository.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-PageRepository.o `test -f 'PageRepository.cpp' || echo '$(srcdir)/'`PageRepository.cpp

auctionManager-PageRepository.obj: PageRepository.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-PageRepository.obj -MD -MP -MF $(DEPDIR)/auctionManager-PageRepository.Tpo -c -o auctionManager-PageRepository.obj `if test -f 'PageRepository.cpp'; then $(CYGPATH_W) 'PageRepository.cpp'; else $(CYGPATH_W) '$(srcdir)/PageRepository.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-PageRepository.Tpo $(DEPDIR)/auctionManager-PageRepository.Po
#	$(AM_V_CXX)source='PageRepository.cpp' object='auctionManager-PageRepository.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-PageRepository.obj `if test -f 'PageRepository.cpp'; then $(CYGPATH_W) 'PageRepository.cpp'; else $(CYGPATH_W) '$(srcdir)/PageRepository.cpp'; fi`

auctionManager-ParserFcts.o: ParserFcts.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ParserFcts.o -MD -MP -MF $(DEPDIR)/auctionManager-ParserFcts.Tpo -c -o auctionManager-ParserFcts.o `test -f 'ParserFcts.cpp' || echo '$(srcdir)/'`ParserFcts.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ParserFcts.Tpo $(DEPDIR)/auctionManager-ParserFcts.Po
#	$(AM_V_CXX)source='ParserFcts.cpp' object='auctionManager-ParserFcts.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ParserFcts.o `test -f 'ParserFcts.cpp' || echo '$(srcdir)/'`ParserFcts.cpp

auctionManager-ParserFcts.obj: ParserFcts.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ParserFcts.obj -MD -MP -MF $(DEPDIR)/auctionManager-ParserFcts.Tpo -c -o auctionManager-ParserFcts.obj `if test -f 'ParserFcts.cpp'; then $(CYGPATH_W) 'ParserFcts.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserFcts.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ParserFcts.Tpo $(DEPDIR)/auctionManager-ParserFcts.Po
#	$(AM_V_CXX)source='ParserFcts.cpp' object='auctionManager-ParserFcts.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ParserFcts.obj `if test -f 'ParserFcts.cpp'; then $(CYGPATH_W) 'ParserFcts.cpp'; else $(CYGPATH_W) '$(srcdir)/ParserFcts.cpp'; fi`

auctionManager-ProcModule.o: ProcModule.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ProcModule.o -MD -MP -MF $(DEPDIR)/auctionManager-ProcModule.Tpo -c -o auctionManager-ProcModule.o `test -f 'ProcModule.cpp' || echo '$(srcdir)/'`ProcModule.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ProcModule.Tpo $(DEPDIR)/auctionManager-ProcModule.Po
#	$(AM_V_CXX)source='ProcModule.cpp' object='auctionManager-ProcModule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ProcModule.o `test -f 'ProcModule.cpp' || echo '$(srcdir)/'`ProcModule.cpp

auctionManager-ProcModule.obj: ProcModule.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ProcModule.obj -MD -MP -MF $(DEPDIR)/auctionManager-ProcModule.Tpo -c -o auctionManager-ProcModule.obj `if test -f 'ProcModule.cpp'; then $(CYGPATH_W) 'ProcModule.cpp'; else $(CYGPATH_W) '$(srcdir)/ProcModule.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ProcModule.Tpo $(DEPDIR)/auctionManager-ProcModule.Po
#	$(AM_V_CXX)source='ProcModule.cpp' object='auctionManager-ProcModule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ProcModule.obj `if test -f 'ProcModule.cpp'; then $(CYGPATH_W) 'ProcModule.cpp'; else $(CYGPATH_W) '$(srcdir)/ProcModule.cpp'; fi`

auctionManager-Constants.o: Constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Constants.o -MD -MP -MF $(DEPDIR)/auctionManager-Constants.Tpo -c -o auctionManager-Constants.o `test -f 'Constants.cpp' || echo '$(srcdir)/'`Constants.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Constants.Tpo $(DEPDIR)/auctionManager-Constants.Po
#	$(AM_V_CXX)source='Constants.cpp' object='auctionManager-Constants.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Constants.o `test -f 'Constants.cpp' || echo '$(srcdir)/'`Constants.cpp

auctionManager-Constants.obj: Constants.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Constants.obj -MD -MP -MF $(DEPDIR)/auctionManager-Constants.Tpo -c -o auctionManager-Constants.obj `if test -f 'Constants.cpp'; then $(CYGPATH_W) 'Constants.cpp'; else $(CYGPATH_W) '$(srcdir)/Constants.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Constants.Tpo $(DEPDIR)/auctionManager-Constants.Po
#	$(AM_V_CXX)source='Constants.cpp' object='auctionManager-Constants.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Constants.obj `if test -f 'Constants.cpp'; then $(CYGPATH_W) 'Constants.cpp'; else $(CYGPATH_W) '$(srcdir)/Constants.cpp'; fi`

auctionManager-ConstantsAum.o: ConstantsAum.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ConstantsAum.o -MD -MP -MF $(DEPDIR)/auctionManager-ConstantsAum.Tpo -c -o auctionManager-ConstantsAum.o `test -f 'ConstantsAum.cpp' || echo '$(srcdir)/'`ConstantsAum.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ConstantsAum.Tpo $(DEPDIR)/auctionManager-ConstantsAum.Po
#	$(AM_V_CXX)source='ConstantsAum.cpp' object='auctionManager-ConstantsAum.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ConstantsAum.o `test -f 'ConstantsAum.cpp' || echo '$(srcdir)/'`ConstantsAum.cpp

auctionManager-ConstantsAum.obj: ConstantsAum.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ConstantsAum.obj -MD -MP -MF $(DEPDIR)/auctionManager-ConstantsAum.Tpo -c -o auctionManager-ConstantsAum.obj `if test -f 'ConstantsAum.cpp'; then $(CYGPATH_W) 'ConstantsAum.cpp'; else $(CYGPATH_W) '$(srcdir)/ConstantsAum.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ConstantsAum.Tpo $(DEPDIR)/auctionManager-ConstantsAum.Po
#	$(AM_V_CXX)source='ConstantsAum.cpp' object='auctionManager-ConstantsAum.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ConstantsAum.obj `if test -f 'ConstantsAum.cpp'; then $(CYGPATH_W) 'ConstantsAum.cpp'; else $(CYGPATH_W) '$(srcdir)/ConstantsAum.cpp'; fi`

auctionManager-ConfigParser.o: ConfigParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ConfigParser.o -MD -MP -MF $(DEPDIR)/auctionManager-ConfigParser.Tpo -c -o auctionManager-ConfigParser.o `test -f 'ConfigParser.cpp' || echo '$(srcdir)/'`ConfigParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ConfigParser.Tpo $(DEPDIR)/auctionManager-ConfigParser.Po
#	$(AM_V_CXX)source='ConfigParser.cpp' object='auctionManager-ConfigParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ConfigParser.o `test -f 'ConfigParser.cpp' || echo '$(srcdir)/'`ConfigParser.cpp

auctionManager-ConfigParser.obj: ConfigParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ConfigParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-ConfigParser.Tpo -c -o auctionManager-ConfigParser.obj `if test -f 'ConfigParser.cpp'; then $(CYGPATH_W) 'ConfigParser.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ConfigParser.Tpo $(DEPDIR)/auctionManager-ConfigParser.Po
#	$(AM_V_CXX)source='ConfigParser.cpp' object='auctionManager-ConfigParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ConfigParser.obj `if test -f 'ConfigParser.cpp'; then $(CYGPATH_W) 'ConfigParser.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigParser.cpp'; fi`

auctionManager-ConfigManager.o: ConfigManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ConfigManager.o -MD -MP -MF $(DEPDIR)/auctionManager-ConfigManager.Tpo -c -o auctionManager-ConfigManager.o `test -f 'ConfigManager.cpp' || echo '$(srcdir)/'`ConfigManager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ConfigManager.Tpo $(DEPDIR)/auctionManager-ConfigManager.Po
#	$(AM_V_CXX)source='ConfigManager.cpp' object='auctionManager-ConfigManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ConfigManager.o `test -f 'ConfigManager.cpp' || echo '$(srcdir)/'`ConfigManager.cpp

auctionManager-ConfigManager.obj: ConfigManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-ConfigManager.obj -MD -MP -MF $(DEPDIR)/auctionManager-ConfigManager.Tpo -c -o auctionManager-ConfigManager.obj `if test -f 'ConfigManager.cpp'; then $(CYGPATH_W) 'ConfigManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigManager.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-ConfigManager.Tpo $(DEPDIR)/auctionManager-ConfigManager.Po
#	$(AM_V_CXX)source='ConfigManager.cpp' object='auctionManager-ConfigManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-ConfigManager.obj `if test -f 'ConfigManager.cpp'; then $(CYGPATH_W) 'ConfigManager.cpp'; else $(CYGPATH_W) '$(srcdir)/ConfigManager.cpp'; fi`

auctionManager-CommandLineArgs.o: CommandLineArgs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-CommandLineArgs.o -MD -MP -MF $(DEPDIR)/auctionManager-CommandLineArgs.Tpo -c -o auctionManager-CommandLineArgs.o `test -f 'CommandLineArgs.cpp' || echo '$(srcdir)/'`CommandLineArgs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-CommandLineArgs.Tpo $(DEPDIR)/auctionManager-CommandLineArgs.Po
#	$(AM_V_CXX)source='CommandLineArgs.cpp' object='auctionManager-CommandLineArgs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-CommandLineArgs.o `test -f 'CommandLineArgs.cpp' || echo '$(srcdir)/'`CommandLineArgs.cpp

auctionManager-CommandLineArgs.obj: CommandLineArgs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-CommandLineArgs.obj -MD -MP -MF $(DEPDIR)/auctionManager-CommandLineArgs.Tpo -c -o auctionManager-CommandLineArgs.obj `if test -f 'CommandLineArgs.cpp'; then $(CYGPATH_W) 'CommandLineArgs.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandLineArgs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-CommandLineArgs.Tpo $(DEPDIR)/auctionManager-CommandLineArgs.Po
#	$(AM_V_CXX)source='CommandLineArgs.cpp' object='auctionManager-CommandLineArgs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-CommandLineArgs.obj `if test -f 'CommandLineArgs.cpp'; then $(CYGPATH_W) 'CommandLineArgs.cpp'; else $(CYGPATH_W) '$(srcdir)/CommandLineArgs.cpp'; fi`

auctionManager-CtrlComm.o: CtrlComm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-CtrlComm.o -MD -MP -MF $(DEPDIR)/auctionManager-CtrlComm.Tpo -c -o auctionManager-CtrlComm.o `test -f 'CtrlComm.cpp' || echo '$(srcdir)/'`CtrlComm.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-CtrlComm.Tpo $(DEPDIR)/auctionManager-CtrlComm.Po
#	$(AM_V_CXX)source='CtrlComm.cpp' object='auctionManager-CtrlComm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-CtrlComm.o `test -f 'CtrlComm.cpp' || echo '$(srcdir)/'`CtrlComm.cpp

auctionManager-CtrlComm.obj: CtrlComm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-CtrlComm.obj -MD -MP -MF $(DEPDIR)/auctionManager-CtrlComm.Tpo -c -o auctionManager-CtrlComm.obj `if test -f 'CtrlComm.cpp'; then $(CYGPATH_W) 'CtrlComm.cpp'; else $(CYGPATH_W) '$(srcdir)/CtrlComm.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-CtrlComm.Tpo $(DEPDIR)/auctionManager-CtrlComm.Po
#	$(AM_V_CXX)source='CtrlComm.cpp' object='auctionManager-CtrlComm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-CtrlComm.obj `if test -f 'CtrlComm.cpp'; then $(CYGPATH_W) 'CtrlComm.cpp'; else $(CYGPATH_W) '$(srcdir)/CtrlComm.cpp'; fi`

auctionManager-XMLParser.o: XMLParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-XMLParser.o -MD -MP -MF $(DEPDIR)/auctionManager-XMLParser.Tpo -c -o auctionManager-XMLParser.o `test -f 'XMLParser.cpp' || echo '$(srcdir)/'`XMLParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-XMLParser.Tpo $(DEPDIR)/auctionManager-XMLParser.Po
#	$(AM_V_CXX)source='XMLParser.cpp' object='auctionManager-XMLParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-XMLParser.o `test -f 'XMLParser.cpp' || echo '$(srcdir)/'`XMLParser.cpp

auctionManager-XMLParser.obj: XMLParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-XMLParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-XMLParser.Tpo -c -o auctionManager-XMLParser.obj `if test -f 'XMLParser.cpp'; then $(CYGPATH_W) 'XMLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/XMLParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-XMLParser.Tpo $(DEPDIR)/auctionManager-XMLParser.Po
#	$(AM_V_CXX)source='XMLParser.cpp' object='auctionManager-XMLParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-XMLParser.obj `if test -f 'XMLParser.cpp'; then $(CYGPATH_W) 'XMLParser.cpp'; else $(CYGPATH_W) '$(srcdir)/XMLParser.cpp'; fi`

auctionManager-Bid.o: Bid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Bid.o -MD -MP -MF $(DEPDIR)/auctionManager-Bid.Tpo -c -o auctionManager-Bid.o `test -f 'Bid.cpp' || echo '$(srcdir)/'`Bid.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Bid.Tpo $(DEPDIR)/auctionManager-Bid.Po
#	$(AM_V_CXX)source='Bid.cpp' object='auctionManager-Bid.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Bid.o `test -f 'Bid.cpp' || echo '$(srcdir)/'`Bid.cpp

auctionManager-Bid.obj: Bid.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Bid.obj -MD -MP -MF $(DEPDIR)/auctionManager-Bid.Tpo -c -o auctionManager-Bid.obj `if test -f 'Bid.cpp'; then $(CYGPATH_W) 'Bid.cpp'; else $(CYGPATH_W) '$(srcdir)/Bid.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Bid.Tpo $(DEPDIR)/auctionManager-Bid.Po
#	$(AM_V_CXX)source='Bid.cpp' object='auctionManager-Bid.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Bid.obj `if test -f 'Bid.cpp'; then $(CYGPATH_W) 'Bid.cpp'; else $(CYGPATH_W) '$(srcdir)/Bid.cpp'; fi`

auctionManager-AuctionIdSource.o: AuctionIdSource.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionIdSource.o -MD -MP -MF $(DEPDIR)/auctionManager-AuctionIdSource.Tpo -c -o auctionManager-AuctionIdSource.o `test -f 'AuctionIdSource.cpp' || echo '$(srcdir)/'`AuctionIdSource.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionIdSource.Tpo $(DEPDIR)/auctionManager-AuctionIdSource.Po
#	$(AM_V_CXX)source='AuctionIdSource.cpp' object='auctionManager-AuctionIdSource.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionIdSource.o `test -f 'AuctionIdSource.cpp' || echo '$(srcdir)/'`AuctionIdSource.cpp

auctionManager-AuctionIdSource.obj: AuctionIdSource.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionIdSource.obj -MD -MP -MF $(DEPDIR)/auctionManager-AuctionIdSource.Tpo -c -o auctionManager-AuctionIdSource.obj `if test -f 'AuctionIdSource.cpp'; then $(CYGPATH_W) 'AuctionIdSource.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionIdSource.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionIdSource.Tpo $(DEPDIR)/auctionManager-AuctionIdSource.Po
#	$(AM_V_CXX)source='AuctionIdSource.cpp' object='auctionManager-AuctionIdSource.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionIdSource.obj `if test -f 'AuctionIdSource.cpp'; then $(CYGPATH_W) 'AuctionIdSource.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionIdSource.cpp'; fi`

auctionManager-Auction.o: Auction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Auction.o -MD -MP -MF $(DEPDIR)/auctionManager-Auction.Tpo -c -o auctionManager-Auction.o `test -f 'Auction.cpp' || echo '$(srcdir)/'`Auction.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Auction.Tpo $(DEPDIR)/auctionManager-Auction.Po
#	$(AM_V_CXX)source='Auction.cpp' object='auctionManager-Auction.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Auction.o `test -f 'Auction.cpp' || echo '$(srcdir)/'`Auction.cpp

auctionManager-Auction.obj: Auction.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Auction.obj -MD -MP -MF $(DEPDIR)/auctionManager-Auction.Tpo -c -o auctionManager-Auction.obj `if test -f 'Auction.cpp'; then $(CYGPATH_W) 'Auction.cpp'; else $(CYGPATH_W) '$(srcdir)/Auction.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Auction.Tpo $(DEPDIR)/auctionManager-Auction.Po
#	$(AM_V_CXX)source='Auction.cpp' object='auctionManager-Auction.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Auction.obj `if test -f 'Auction.cpp'; then $(CYGPATH_W) 'Auction.cpp'; else $(CYGPATH_W) '$(srcdir)/Auction.cpp'; fi`

auctionManager-AuctionManager.o: AuctionManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionManager.o -MD -MP -MF $(DEPDIR)/auctionManager-AuctionManager.Tpo -c -o auctionManager-AuctionManager.o `test -f 'AuctionManager.cpp' || echo '$(srcdir)/'`AuctionManager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionManager.Tpo $(DEPDIR)/auctionManager-AuctionManager.Po
#	$(AM_V_CXX)source='AuctionManager.cpp' object='auctionManager-AuctionManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionManager.o `test -f 'AuctionManager.cpp' || echo '$(srcdir)/'`AuctionManager.cpp

auctionManager-AuctionManager.obj: AuctionManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionManager.obj -MD -MP -MF $(DEPDIR)/auctionManager-AuctionManager.Tpo -c -o auctionManager-AuctionManager.obj `if test -f 'AuctionManager.cpp'; then $(CYGPATH_W) 'AuctionManager.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionManager.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionManager.Tpo $(DEPDIR)/auctionManager-AuctionManager.Po
#	$(AM_V_CXX)source='AuctionManager.cpp' object='auctionManager-AuctionManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionManager.obj `if test -f 'AuctionManager.cpp'; then $(CYGPATH_W) 'AuctionManager.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionManager.cpp'; fi`

auctionManager-AuctionFileParser.o: AuctionFileParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionFileParser.o -MD -MP -MF $(DEPDIR)/auctionManager-AuctionFileParser.Tpo -c -o auctionManager-AuctionFileParser.o `test -f 'AuctionFileParser.cpp' || echo '$(srcdir)/'`AuctionFileParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionFileParser.Tpo $(DEPDIR)/auctionManager-AuctionFileParser.Po
#	$(AM_V_CXX)source='AuctionFileParser.cpp' object='auctionManager-AuctionFileParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionFileParser.o `test -f 'AuctionFileParser.cpp' || echo '$(srcdir)/'`AuctionFileParser.cpp

auctionManager-AuctionFileParser.obj: AuctionFileParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionFileParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-AuctionFileParser.Tpo -c -o auctionManager-AuctionFileParser.obj `if test -f 'AuctionFileParser.cpp'; then $(CYGPATH_W) 'AuctionFileParser.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionFileParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionFileParser.Tpo $(DEPDIR)/auctionManager-AuctionFileParser.Po
#	$(AM_V_CXX)source='AuctionFileParser.cpp' object='auctionManager-AuctionFileParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionFileParser.obj `if test -f 'AuctionFileParser.cpp'; then $(CYGPATH_W) 'AuctionFileParser.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionFileParser.cpp'; fi`

auctionManager-MAPIAuctionParser.o: MAPIAuctionParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-MAPIAuctionParser.o -MD -MP -MF $(DEPDIR)/auctionManager-MAPIAuctionParser.Tpo -c -o auctionManager-MAPIAuctionParser.o `test -f 'MAPIAuctionParser.cpp' || echo '$(srcdir)/'`MAPIAuctionParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-MAPIAuctionParser.Tpo $(DEPDIR)/auctionManager-MAPIAuctionParser.Po
#	$(AM_V_CXX)source='MAPIAuctionParser.cpp' object='auctionManager-MAPIAuctionParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-MAPIAuctionParser.o `test -f 'MAPIAuctionParser.cpp' || echo '$(srcdir)/'`MAPIAuctionParser.cpp

auctionManager-MAPIAuctionParser.obj: MAPIAuctionParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-MAPIAuctionParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-MAPIAuctionParser.Tpo -c -o auctionManager-MAPIAuctionParser.obj `if test -f 'MAPIAuctionParser.cpp'; then $(CYGPATH_W) 'MAPIAuctionParser.cpp'; else $(CYGPATH_W) '$(srcdir)/MAPIAuctionParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-MAPIAuctionParser.Tpo $(DEPDIR)/auctionManager-MAPIAuctionParser.Po
#	$(AM_V_CXX)source='MAPIAuctionParser.cpp' object='auctionManager-MAPIAuctionParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-MAPIAuctionParser.obj `if test -f 'MAPIAuctionParser.cpp'; then $(CYGPATH_W) 'MAPIAuctionParser.cpp'; else $(CYGPATH_W) '$(srcdir)/MAPIAuctionParser.cpp'; fi`

auctionManager-BidIdSource.o: BidIdSource.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-BidIdSource.o -MD -MP -MF $(DEPDIR)/auctionManager-BidIdSource.Tpo -c -o auctionManager-BidIdSource.o `test -f 'BidIdSource.cpp' || echo '$(srcdir)/'`BidIdSource.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-BidIdSource.Tpo $(DEPDIR)/auctionManager-BidIdSource.Po
#	$(AM_V_CXX)source='BidIdSource.cpp' object='auctionManager-BidIdSource.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-BidIdSource.o `test -f 'BidIdSource.cpp' || echo '$(srcdir)/'`BidIdSource.cpp

auctionManager-BidIdSource.obj: BidIdSource.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-BidIdSource.obj -MD -MP -MF $(DEPDIR)/auctionManager-BidIdSource.Tpo -c -o auctionManager-BidIdSource.obj `if test -f 'BidIdSource.cpp'; then $(CYGPATH_W) 'BidIdSource.cpp'; else $(CYGPATH_W) '$(srcdir)/BidIdSource.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-BidIdSource.Tpo $(DEPDIR)/auctionManager-BidIdSource.Po
#	$(AM_V_CXX)source='BidIdSource.cpp' object='auctionManager-BidIdSource.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-BidIdSource.obj `if test -f 'BidIdSource.cpp'; then $(CYGPATH_W) 'BidIdSource.cpp'; else $(CYGPATH_W) '$(srcdir)/BidIdSource.cpp'; fi`

auctionManager-BidManager.o: BidManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-BidManager.o -MD -MP -MF $(DEPDIR)/auctionManager-BidManager.Tpo -c -o auctionManager-BidManager.o `test -f 'BidManager.cpp' || echo '$(srcdir)/'`BidManager.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-BidManager.Tpo $(DEPDIR)/auctionManager-BidManager.Po
#	$(AM_V_CXX)source='BidManager.cpp' object='auctionManager-BidManager.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-BidManager.o `test -f 'BidManager.cpp' || echo '$(srcdir)/'`BidManager.cpp

auctionManager-BidManager.obj: BidManager.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-BidManager.obj -MD -MP -MF $(DEPDIR)/auctionManager-BidManager.Tpo -c -o auctionManager-BidManager.obj `if test -f 'BidManager.cpp'; then $(CYGPATH_W) 'BidManager.cpp'; else $(CYGPATH_W) '$(srcdir)/BidManager.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-BidManager.Tpo $(DEPDIR)/auctionManager-BidManager.Po
#	$(AM_V_CXX)source='BidManager.cpp' object='auctionManager-BidManager.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-BidManager.obj `if test -f 'BidManager.cpp'; then $(CYGPATH_W) 'BidManager.cpp'; else $(CYGPATH_W) '$(srcdir)/BidManager.cpp'; fi`

auctionManager-BidFileParser.o: BidFileParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-BidFileParser.o -MD -MP -MF $(DEPDIR)/auctionManager-BidFileParser.Tpo -c -o auctionManager-BidFileParser.o `test -f 'BidFileParser.cpp' || echo '$(srcdir)/'`BidFileParser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-BidFileParser.Tpo $(DEPDIR)/auctionManager-BidFileParser.Po
#	$(AM_V_CXX)source='BidFileParser.cpp' object='auctionManager-BidFileParser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-BidFileParser.o `test -f 'BidFileParser.cpp' || echo '$(srcdir)/'`BidFileParser.cpp

auctionManager-BidFileParser.obj: BidFileParser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-BidFileParser.obj -MD -MP -MF $(DEPDIR)/auctionManager-BidFileParser.Tpo -c -o auctionManager-BidFileParser.obj `if test -f 'BidFileParser.cpp'; then $(CYGPATH_W) 'BidFileParser.cpp'; else $(CYGPATH_W) '$(srcdir)/BidFileParser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-BidFileParser.Tpo $(DEPDIR)/auctionManager-BidFileParser.Po
#	$(AM_V_CXX)source='BidFileParser.cpp' object='auctionManager-BidFileParser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-BidFileParser.obj `if test -f 'BidFileParser.cpp'; then $(CYGPATH_W) 'BidFileParser.cpp'; else $(CYGPATH_W) '$(srcdir)/BidFileParser.cpp'; fi`

auctionManager-AUMProcessor.o: AUMProcessor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AUMProcessor.o -MD -MP -MF $(DEPDIR)/auctionManager-AUMProcessor.Tpo -c -o auctionManager-AUMProcessor.o `test -f 'AUMProcessor.cpp' || echo '$(srcdir)/'`AUMProcessor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AUMProcessor.Tpo $(DEPDIR)/auctionManager-AUMProcessor.Po
#	$(AM_V_CXX)source='AUMProcessor.cpp' object='auctionManager-AUMProcessor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AUMProcessor.o `test -f 'AUMProcessor.cpp' || echo '$(srcdir)/'`AUMProcessor.cpp

auctionManager-AUMProcessor.obj: AUMProcessor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AUMProcessor.obj -MD -MP -MF $(DEPDIR)/auctionManager-AUMProcessor.Tpo -c -o auctionManager-AUMProcessor.obj `if test -f 'AUMProcessor.cpp'; then $(CYGPATH_W) 'AUMProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/AUMProcessor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AUMProcessor.Tpo $(DEPDIR)/auctionManager-AUMProcessor.Po
#	$(AM_V_CXX)source='AUMProcessor.cpp' object='auctionManager-AUMProcessor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AUMProcessor.obj `if test -f 'AUMProcessor.cpp'; then $(CYGPATH_W) 'AUMProcessor.cpp'; else $(CYGPATH_W) '$(srcdir)/AUMProcessor.cpp'; fi`

auctionManager-AuctionManagerInfo.o: AuctionManagerInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionManagerInfo.o -MD -MP -MF $(DEPDIR)/auctionManager-AuctionManagerInfo.Tpo -c -o auctionManager-AuctionManagerInfo.o `test -f 'AuctionManagerInfo.cpp' || echo '$(srcdir)/'`AuctionManagerInfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionManagerInfo.Tpo $(DEPDIR)/auctionManager-AuctionManagerInfo.Po
#	$(AM_V_CXX)source='AuctionManagerInfo.cpp' object='auctionManager-AuctionManagerInfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionManagerInfo.o `test -f 'AuctionManagerInfo.cpp' || echo '$(srcdir)/'`AuctionManagerInfo.cpp

auctionManager-AuctionManagerInfo.obj: AuctionManagerInfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionManagerInfo.obj -MD -MP -MF $(DEPDIR)/auctionManager-AuctionManagerInfo.Tpo -c -o auctionManager-AuctionManagerInfo.obj `if test -f 'AuctionManagerInfo.cpp'; then $(CYGPATH_W) 'AuctionManagerInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionManagerInfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionManagerInfo.Tpo $(DEPDIR)/auctionManager-AuctionManagerInfo.Po
#	$(AM_V_CXX)source='AuctionManagerInfo.cpp' object='auctionManager-AuctionManagerInfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionManagerInfo.obj `if test -f 'AuctionManagerInfo.cpp'; then $(CYGPATH_W) 'AuctionManagerInfo.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionManagerInfo.cpp'; fi`

auctionManager-AuctionTimer.o: AuctionTimer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionTimer.o -MD -MP -MF $(DEPDIR)/auctionManager-AuctionTimer.Tpo -c -o auctionManager-AuctionTimer.o `test -f 'AuctionTimer.cpp' || echo '$(srcdir)/'`AuctionTimer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionTimer.Tpo $(DEPDIR)/auctionManager-AuctionTimer.Po
#	$(AM_V_CXX)source='AuctionTimer.cpp' object='auctionManager-AuctionTimer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionTimer.o `test -f 'AuctionTimer.cpp' || echo '$(srcdir)/'`AuctionTimer.cpp

auctionManager-AuctionTimer.obj: AuctionTimer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionTimer.obj -MD -MP -MF $(DEPDIR)/auctionManager-AuctionTimer.Tpo -c -o auctionManager-AuctionTimer.obj `if test -f 'AuctionTimer.cpp'; then $(CYGPATH_W) 'AuctionTimer.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionTimer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionTimer.Tpo $(DEPDIR)/auctionManager-AuctionTimer.Po
#	$(AM_V_CXX)source='AuctionTimer.cpp' object='auctionManager-AuctionTimer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionTimer.obj `if test -f 'AuctionTimer.cpp'; then $(CYGPATH_W) 'AuctionTimer.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionTimer.cpp'; fi`

auctionManager-AuctionManagerComponent.o: AuctionManagerComponent.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionManagerComponent.o -MD -MP -MF $(DEPDIR)/auctionManager-AuctionManagerComponent.Tpo -c -o auctionManager-AuctionManagerComponent.o `test -f 'AuctionManagerComponent.cpp' || echo '$(srcdir)/'`AuctionManagerComponent.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionManagerComponent.Tpo $(DEPDIR)/auctionManager-AuctionManagerComponent.Po
#	$(AM_V_CXX)source='AuctionManagerComponent.cpp' object='auctionManager-AuctionManagerComponent.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionManagerComponent.o `test -f 'AuctionManagerComponent.cpp' || echo '$(srcdir)/'`AuctionManagerComponent.cpp

auctionManager-AuctionManagerComponent.obj: AuctionManagerComponent.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-AuctionManagerComponent.obj -MD -MP -MF $(DEPDIR)/auctionManager-AuctionManagerComponent.Tpo -c -o auctionManager-AuctionManagerComponent.obj `if test -f 'AuctionManagerComponent.cpp'; then $(CYGPATH_W) 'AuctionManagerComponent.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionManagerComponent.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-AuctionManagerComponent.Tpo $(DEPDIR)/auctionManager-AuctionManagerComponent.Po
#	$(AM_V_CXX)source='AuctionManagerComponent.cpp' object='auctionManager-AuctionManagerComponent.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-AuctionManagerComponent.obj `if test -f 'AuctionManagerComponent.cpp'; then $(CYGPATH_W) 'AuctionManagerComponent.cpp'; else $(CYGPATH_W) '$(srcdir)/AuctionManagerComponent.cpp'; fi`

auctionManager-Auctioner.o: Auctioner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Auctioner.o -MD -MP -MF $(DEPDIR)/auctionManager-Auctioner.Tpo -c -o auctionManager-Auctioner.o `test -f 'Auctioner.cpp' || echo '$(srcdir)/'`Auctioner.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Auctioner.Tpo $(DEPDIR)/auctionManager-Auctioner.Po
#	$(AM_V_CXX)source='Auctioner.cpp' object='auctionManager-Auctioner.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Auctioner.o `test -f 'Auctioner.cpp' || echo '$(srcdir)/'`Auctioner.cpp

auctionManager-Auctioner.obj: Auctioner.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-Auctioner.obj -MD -MP -MF $(DEPDIR)/auctionManager-Auctioner.Tpo -c -o auctionManager-Auctioner.obj `if test -f 'Auctioner.cpp'; then $(CYGPATH_W) 'Auctioner.cpp'; else $(CYGPATH_W) '$(srcdir)/Auctioner.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-Auctioner.Tpo $(DEPDIR)/auctionManager-Auctioner.Po
#	$(AM_V_CXX)source='Auctioner.cpp' object='auctionManager-Auctioner.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-Auctioner.obj `if test -f 'Auctioner.cpp'; then $(CYGPATH_W) 'Auctioner.cpp'; else $(CYGPATH_W) '$(srcdir)/Auctioner.cpp'; fi`

auctionManager-main.o: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-main.o -MD -MP -MF $(DEPDIR)/auctionManager-main.Tpo -c -o auctionManager-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-main.Tpo $(DEPDIR)/auctionManager-main.Po
#	$(AM_V_CXX)source='main.cpp' object='auctionManager-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-main.o `test -f 'main.cpp' || echo '$(srcdir)/'`main.cpp

auctionManager-main.obj: main.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT auctionManager-main.obj -MD -MP -MF $(DEPDIR)/auctionManager-main.Tpo -c -o auctionManager-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/auctionManager-main.Tpo $(DEPDIR)/auctionManager-main.Po
#	$(AM_V_CXX)source='main.cpp' object='auctionManager-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(auctionManager_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o auctionManager-main.obj `if test -f 'main.cpp'; then $(CYGPATH_W) 'main.cpp'; else $(CYGPATH_W) '$(srcdir)/main.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS

#				-I$(top_srcdir)/lib/getopt_long -I$(top_srcdir)/lib/httpd 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
